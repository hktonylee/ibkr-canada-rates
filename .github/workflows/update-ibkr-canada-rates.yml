name: IBKR CA - Update Rate CSVs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'  # 6AM EST
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  update-interest-rates:
    if: github.event_name != 'pull_request' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Run Python updater
        run: python -m ibkr_rates.update --output-dir data
        env:
          PYTHONPATH: src
      - name: Create auto-update branch from base
        id: branch
        env:
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          PR_NUMBER: ${{ github.event.pull_request.number || '' }}
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH="auto-update/pr-${PR_NUMBER}"
            git switch --force-create "$BRANCH"
          else
            BRANCH="${GITHUB_REF_NAME:-$DEFAULT_BRANCH}"
            git checkout -B "$BRANCH"
          fi
          echo "name=$BRANCH" >> "$GITHUB_OUTPUT"
      - uses: EndBug/add-and-commit@v9.1.4
        with:
          add: |
            - ./data/**/*.csv
            - README.md
          message: Daily Update
          committer_name: GitHub Actions
          committer_email: actions@github.com
          push: origin ${{ steps.branch.outputs.name }} --set-upstream --force

  cleanup-pr-branch:
    if: >-
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Delete temporary auto-update branch
        uses: actions/github-script@v7
        with:
          script: |
            const ref = `auto-update/pr-${context.payload.pull_request.number}`;
            core.info(`Deleting branch ${ref}`);
            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/${ref}`,
              });
            } catch (error) {
              if (error.status === 404) {
                core.info('Branch does not exist, skipping');
                return;
              }
              throw error;
            }
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${ref}`,
            });
